{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","Hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","getGifs","category","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","index","rootElement","document","getElementById","createRoot","render"],"mappings":"+KAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAhBhB,SAACP,GACzBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,a,qBCNbK,EAAO,iDAAG,WAAOC,GAAP,gGACdC,EADc,iDACiCC,UAAUF,GAD3C,+DAGDG,MAAMF,GAHL,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVlB,kBAcbM,GAda,4CAAH,sDCCRO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGvC,OAFAL,QAAQC,IAAIa,GAGV,sBAAKK,UAAU,yCAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHGO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAGxB,ECL0B,SAACA,GAC3B,MAA0BhB,mBAAS,CACjCsB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACRvB,EAAQC,GAAUuB,MAAK,SAACC,GACtBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,CAACnB,IAEGoB,EDV2BK,CAAazB,GAAjCY,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAQtB,OACE,qCACE,oBAAIJ,UAAU,mCAAd,SAAkDf,IAEjDmB,GACC,mBAAGJ,UAAU,mCAAb,yBAGF,qBAAKA,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACC,GACX,OAAO,wBAAC,EAAD,2BAAiBA,GAAjB,IAAsBiB,IAAKjB,EAAIC,eEtBnCiB,EAAe,WAC1B,MAAoC3C,mBAAS,CAAC,eAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAMA,OACE,qCACE,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACG6C,EAAWpB,KAAI,SAACR,EAAU6B,GACzB,OAAO,cAAC,EAAD,CAAS7B,SAAUA,GAAe6B,YCb7CC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAAC,EAAD,S","file":"static/js/main.c5761c43.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    console.log(e.target.value);\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n","\r\n export const getGifs = async (category) => {\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=12&api_key=eEd4krAqJZ23iLbpHHSaSoGcOdfWnrnA`\r\n  ;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url\r\n      };\r\n    });\r\n\r\n    return gifs\r\n  };\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  console.log(id);\r\n\r\n  return (\r\n    <div className=\"card animate_animated animate__fadeIn \">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\nimport { useFetchGifs } from \"../Hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  // const [images, setImages] = useState([]);\r\n\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  // useEffect(() => {\r\n  //   getGifs(category).then((imgs) => {\r\n  //     setImages(imgs);\r\n  //   });\r\n  // }, [category]);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate_animated animate__fadeIn\">{category}</h3>\r\n\r\n      {loading && (\r\n        <p className=\"animate__animated animate__flash\">Cargando...</p>\r\n      )}\r\n\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => {\r\n          return <GifGridItem {...img} key={img.id} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"sponge bob\"]);\r\n\r\n  // const handleAdd = () => {\r\n  //   setCategories([...categories, \"hunter\"]);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <h2>GiftExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      {/* <button onClick={handleAdd}> Agregar </button> */}\r\n      <ol>\r\n        {categories.map((category, index) => {\r\n          return <GifGrid category={category} key={index} />;\r\n        })}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\nimport { GifExpertApp } from \"./GifExpertApp\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <GifExpertApp />\n  </StrictMode>\n);\n"],"sourceRoot":""}